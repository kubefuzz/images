[agent]
  ## Default flushing interval for all outputs.
  ## Should be higher than the [[input.exec]] timeout.
  flush_interval = "60s"

[[inputs.exec]]
  ## Data collection interval for all inputs.
  ## AFL updates the `fuzzer_stats` file every 60 seconds.
  ## https://github.com/AFLplusplus/AFLplusplus/blob/2.65c/include/config.h#L226-L229
  interval = "60s"

  ## Commands to execute.
  commands = ["/usr/bin/collect.afl.fuzzer_stats.sh"]

  ## Timeout for each command to complete.
  timeout = "59s"

  ## The data format to be read.
  ## https://github.com/influxdata/telegraf/blob/master/docs/DATA_FORMATS_INPUT.md
  data_format = "grok"

  ## This is a list of patterns to check the given log file(s) for.
  ## Note that adding patterns here increases processing time.
  ## The most efficient configuration is to have one pattern.
  grok_patterns = [
    "%{NOTSPACE:name:tag} %{EXECS_PER_SEC:key:measurement}%{SPACE}: %{NUMBER:value:float}",
    "%{NOTSPACE:name:tag} %{STABILITY:key:measurement}%{SPACE}: %{NUMBER:value:float}",
    "%{NOTSPACE:name:tag} %{BITMAP_CVG:key:measurement}%{SPACE}: %{NUMBER:value:float}",
    "%{NOTSPACE:name:tag} %{AFL_BANNER:key:measurement}%{SPACE}: %{GREEDYDATA:value:string}",
    "%{NOTSPACE:name:tag} %{AFL_VERSION:key:measurement}%{SPACE}: %{GREEDYDATA:value:string}",
    "%{NOTSPACE:name:tag} %{TARGET_MODE:key:measurement}%{SPACE}: %{GREEDYDATA:value:string}",
    "%{NOTSPACE:name:tag} %{COMMAND_LINE:key:measurement}%{SPACE}: %{GREEDYDATA:value:string}",
    "%{NOTSPACE:name:tag} %{WORD:key:measurement}%{SPACE}: %{INT:value:int}",
  ]

  grok_custom_patterns = '''
    EXECS_PER_SEC (execs_per_sec)
    STABILITY (stability)
    BITMAP_CVG (bitmap_cvg)
    AFL_BANNER (afl_banner)
    AFL_VERSION (afl_version)
    TARGET_MODE (target_mode)
    COMMAND_LINE (command_line)
  '''

[[outputs.file]]
  ## Files to write to.
  ## Writing to `stdout` is useful for debugging, since the output can be
  ## checked by viewing the container logs.
  ## Writing to `/tmp` is a fallback (in case writing to InfluxDB fails).
  files = ["stdout", "/tmp/metrics.out"]

  ## Data format to output.
  ## https://github.com/influxdata/telegraf/blob/master/docs/DATA_FORMATS_OUTPUT.md
  data_format = "influx"

[[outputs.influxdb]]
  ## An InfluxDB with a `telegraf` database has to run for this to work.
  urls = ["${INFLUXDB_URL}"]
  database = "telegraf"

  ## Timeout for HTTP messages.
  ## Defaults to 5s, which is not enough when sending lots of data.
  timeout = "30s"